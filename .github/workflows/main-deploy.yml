name: Tales App Deployment

on:
  push:
    branches:
      - main
  workflow_dispatch:
jobs:
  check-changes:
    name: Check Changes
    runs-on: ubuntu-latest
    outputs:
      flutter: ${{ steps.changes.outputs.flutter }}
    steps:
      - uses: actions/checkout@v4
      - uses: dorny/paths-filter@v3
        id: changes
        with:
          filters: |
            flutter:
              - 'flutter/**'
  build:
    name: Build
    runs-on: self-hosted
    needs: [check-changes]
    if: always() &&
      needs.check-changes.result == 'success'
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Build Docker Flutter App Website
        if: needs.check-changes.outputs.flutter == 'true'
        run: docker compose build --no-cache flutter-app
      - name: Clean
        run: docker image prune -f
  deploy:
    name: Deploy
    runs-on: self-hosted
    needs: build
    if: always() && needs.build.result == 'success'
    env:
      URL_WEBSITE: ${{ vars.URL_WEBSITE }}
    environment:
      name: Website
      url: https://${{ env.URL_WEBSITE }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Deploy
        run: docker compose up -d
      - name: Restart Docker Compose Services
        run: docker compose restart flutter-app